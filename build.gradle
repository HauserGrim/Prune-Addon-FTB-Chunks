plugins {
	id 'forgified-fabric-loom' version '0.6-SNAPSHOT'
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
def ENV = System.getenv()

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


loom {
	silentMojangMappingsLicense()

	useFabricMixin = true

	dataGen {
		mod project.mod_id
	}
	mixinConfig "mixin.pruneaddonftbchunks.json"
	launches {
		data {
			arg "--existing", file("src/main/resources").absolutePath
		}
	}
}

repositories {
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven {
		url "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
			includeGroup "dev.ftb.mods"
		}
	}
    maven { url "https://maven.architectury.dev/" }

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings minecraft.officialMojangMappings()
	forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
	modImplementation "dev.ftb.mods:ftb-library-forge:${rootProject.ftb_library_version}"
	modImplementation "dev.ftb.mods:ftb-chunks-forge:${rootProject.ftb_chunks_version}"
	//modCompile "curse.maven:kubejs-fabric-395864:${kubejs_file}"

	modCompile "curse.maven:jei-238222:${jei_file}"

	// To change the versions see the gradle.properties file
	//minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	//modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	//modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}
minecraft {
	runs {
		client {
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	//withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}

	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

	classifier "dev"
}

// configure the maven publication
publishing {
	publications {
		library(MavenPublication) {
			artifactId = project.archives_base_name
			artifact(remapJar) {
				builtBy remapJar
			}
		}
	}
	repositories {
			maven {
				url "file:///${project.projectDir}/mcmodsrepo"
			}

	}
}
